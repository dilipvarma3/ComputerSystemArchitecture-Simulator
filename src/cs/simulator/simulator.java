/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs.simulator;

/**
 * @author dilipvarma
 */

import Memory.Memory;
import Registers.*;
import Utilities.Decode.*;
import Utilities.DataTypeConvert;
import Utilities.Decode;
import Utilities.MachineFaultException;
import program.program1;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import program.program2;

public class simulator extends javax.swing.JFrame {

    /**
     * Creates new form simulator

     */
    static int l1 = 0;
    String opcode, reg, ireg, mem, indirectadd, q,ins;
    int opcode1, reg1, ireg1, mem1, indirectadd1, q1;
    int EA;
    Memory m=new Memory();
    Registers r = new Registers();
    Decode dc=new Decode(r,m);
    program1 p;
    program2 p1;
    
   // static int m[] = new int[2048];

    public simulator() {
        initComponents();       // It is used to create components
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ipl = new javax.swing.JButton();
        run = new javax.swing.JButton();
        singlestep = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        program1 = new javax.swing.JButton();
        r0 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        r1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        r2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        r3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        mar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        mbr = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mfr = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cc = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ixr1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ixr2 = new javax.swing.JTextField();
        ixr3 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ir = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Log = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        program2 = new javax.swing.JButton();
        halt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ipl.setText("IPL");
        ipl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iplActionPerformed(evt);
            }
        });

        run.setText("run");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });

        singlestep.setText("singlestep");
        singlestep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singlestepActionPerformed(evt);
            }
        });

        input.setColumns(20);
        input.setRows(5);
        jScrollPane1.setViewportView(input);

        jLabel1.setText("R0");

        program1.setText("program1");
        program1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                program1ActionPerformed(evt);
            }
        });

        jLabel2.setText("R1");

        jLabel3.setText("R2");

        jLabel4.setText("R3");

        r3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r3ActionPerformed(evt);
            }
        });

        jLabel5.setText("PC");

        pc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcActionPerformed(evt);
            }
        });

        jLabel6.setText("MAR");

        jLabel7.setText("MBR");

        jLabel8.setText("MFR");

        jLabel9.setText("CC");

        jLabel10.setText("IXR1");

        jLabel11.setText("IXR2");

        jLabel12.setText("IXR3");

        jLabel13.setText("IR");

        ir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                irActionPerformed(evt);
            }
        });

        jLabel15.setText("Input");

        Log.setText("Log");

        log.setEditable(false);
        log.setColumns(20);
        log.setRows(5);
        jScrollPane2.setViewportView(log);

        program2.setText("program 2");
        program2.setToolTipText("");
        program2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                program2ActionPerformed(evt);
            }
        });

        halt.setText("HALT");
        halt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haltActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(r1)
                    .addComponent(r2)
                    .addComponent(r3)
                    .addComponent(pc)
                    .addComponent(mar)
                    .addComponent(mbr)
                    .addComponent(mfr)
                    .addComponent(cc)
                    .addComponent(ixr1)
                    .addComponent(r0)
                    .addComponent(ixr3)
                    .addComponent(ir)
                    .addComponent(ixr2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                    .addComponent(Log)
                    .addComponent(jScrollPane2)))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(ipl, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(program1)
                .addGap(50, 50, 50)
                .addComponent(run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(singlestep, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(program2)
                .addGap(38, 38, 38)
                .addComponent(halt, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(program1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(run, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(singlestep, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(program2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(halt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ipl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(r0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(r1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(r2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(r3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(pc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(mar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Log))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(mbr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(mfr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ixr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ixr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(ixr3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(ir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void r3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r3ActionPerformed

    private void pcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcActionPerformed

    private void irActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_irActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_irActionPerformed

    private void iplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iplActionPerformed
        // When the button ipl is clicked on the simulator the program gets loaded with some instructions specified//
        r0.setText("");
        r1.setText("");
        r2.setText("");
        r3.setText("");
        input.setText("LDA 3,1,0,11" + "\n" + "LDR 2,2,0,12" + "\n" + "LDX 0,2,0,13" + "\n" + "STR 1,1,0,14" + "\n" + "STX 1,1,0,15" +"\n"+ "AMR 1,2,0,16"+"\n"+"SMR 1,1,0,17"+"\n"+"AIR 1,18"+"\n"+"SIR 2,19"+"\n"+"JZ  1,1,0,20"+"\n"+"JNE 1,1,0,21"+"\n"+"SOB 1,1,1,22"+"\n"+"JGE 2,1,1,23"+"\n"+"JMA 1,0,24"+"\n"+"JSR 1,0,25"+"\n"+"RFS 26"+"\n"+"MLT 0,2"+"\n"+"DVD 1,2"+"\n"+"TRR 2,0"+"\n"+"AND 2,1"+"\n"+"ORR 1,0"+"\n"+"SRC 3,3,1,1"+"\n"+"RRC 3,3,1,1"+"\n"+"NOT 1"+"\n"+"IN  1,0"+"\n"+"OUT 1,0"+"\n"+"JCC 2,0,0,31");
        pc.setText(r.getPC());
      
        try {
            m.setMemValue("11","10");
            m.setMemValue("12","20");
            m.setMemValue("13","30");
            m.setMemValue("14","40");
            m.setMemValue("15","50");
            m.setMemValue("22","100");
        } catch (Exception e) {
            e.printStackTrace();
        }
    /*    try {
            r0.setText(m.getMemValue("11"));
        } catch (Exception ex) {
            Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        pc.setText( r.getPC());
        log.setText("ipl complete" + "\n");

    }//GEN-LAST:event_iplActionPerformed

    private void singlestepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlestepActionPerformed
        // This action is performed whenever user presses singlestep button on the simulator
        // This is used to handle multiple instructions by executing one instruction at a time 
        String[] z = (input.getText()).split("\n"); // it is used to capture the input text and divide into an array

        if (l1 < z.length) {
            ins = z[l1];
            // Decoding begins
     
            opcode=ins.substring(0,3);
            //System.out.println(opcode);
           // System.out.println(ins.substring(4,5));
            if(opcode.equals("LDR")||opcode.equals("STR")||opcode.equals("LDA")||opcode.equals("LDX")||opcode.equals("STX"))
            {
                try {
                    
                    dc.decodeForLoadStore(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            else if(opcode.equals("AMR")||opcode.equals("SMR")||opcode.equals("AIR")||opcode.equals("SIR"))
            {
                try {
                    
                    dc.decodeForArithmetic(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
            else if(opcode.equals("JZ ")||opcode.equals("JNE")||opcode.equals("SOB")||opcode.equals("JGE")||opcode.equals("JMA")||opcode.equals("JSR")||opcode.equals("RFS")||opcode.equals("JCC"))
            {
                 try {
                    
                    dc.decodeForTransfer(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(opcode.equals("MLT")||opcode.equals("DVD")||opcode.equals("TRR")||opcode.equals("AND")||opcode.equals("ORR")||opcode.equals("NOT"))
            {
                try {
                    
                    dc.decodeForLogical(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(opcode.equals("SRC")||opcode.equals("RRC"))
            {
                System.out.println("HI SRC");
                try {
                     
                    dc.decodeForShiftRotate(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(opcode.equals("IN "))
                {
                //JFrame frame1=new JFrame();
               System.out.println("IN");
               String inputValue = JOptionPane.showInputDialog("Please input a value");
               
                try {
                    
                    dc.decodeForIO(ins,inputValue);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                else if(opcode.equals("OUT")){
                    System.out.println("OUT");
                    try {
                    
                    dc.decodeForIO(ins," ");
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            
            
             else {
                try {
                    throw new MachineFaultException(MachineFaultException.FaultCode.ILL_OPRC.getValue(),
                            MachineFaultException.FaultCode.ILL_OPRC.getMessage());
                } catch (MachineFaultException ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            
           
            l1++;
        }
    


    }//GEN-LAST:event_singlestepActionPerformed

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        // This function/action is used to run multiple instructions at a time
        String z[] = (input.getText()).split("\n");
       
        System.out.println(z.length);
        int i=0;
        while(i<z.length)
        {
            
            ins=z[i];
            opcode=ins.substring(0,3);
            //System.out.println(opcode);
           // System.out.println(ins.substring(4,5));
            if(opcode.equals("LDR")||opcode.equals("STR")||opcode.equals("LDA")||opcode.equals("LDX")||opcode.equals("STX"))
            {
                try {
                    
                    dc.decodeForLoadStore(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            else if(opcode.equals("AMR")||opcode.equals("SMR")||opcode.equals("AIR")||opcode.equals("SIR"))
            {
                try {
                    
                    dc.decodeForArithmetic(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
            else if(opcode.equals("JZ ")||opcode.equals("JNE")||opcode.equals("SOB")||opcode.equals("JGE")||opcode.equals("JMA")||opcode.equals("JSR")||opcode.equals("RFS")||opcode.equals("JCC"))
            {
                 try {
                    
                    dc.decodeForTransfer(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(opcode.equals("MLT")||opcode.equals("DVD")||opcode.equals("TRR")||opcode.equals("AND")||opcode.equals("ORR")||opcode.equals("NOT"))
            {
                try {
                    
                    dc.decodeForLogical(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
             else if(opcode.equals("SRC")||opcode.equals("RRC"))
            {
                System.out.println("HI SRC");
                try {
                     
                    dc.decodeForShiftRotate(ins);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(opcode.equals("IN "))
                {
                //JFrame frame1=new JFrame();
               System.out.println("IN");
               String inputValue = JOptionPane.showInputDialog("Please input a value");
               
                try {
                    
                    dc.decodeForIO(ins,inputValue);
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                else if(opcode.equals("OUT")){
                    System.out.println("OUT");
                    try {
                    
                    dc.decodeForIO(ins," ");
                } catch (Exception ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            else {
                try {
                    throw new MachineFaultException(MachineFaultException.FaultCode.ILL_OPRC.getValue(),
                            MachineFaultException.FaultCode.ILL_OPRC.getMessage());
                } catch (MachineFaultException ex) {
                    Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
            
            
            
          i++;  
        
        if(i==z.length)
        {
            break;
        }
        }
        
    }//GEN-LAST:event_runActionPerformed

    private void program1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_program1ActionPerformed
        // TODO add your handling code here:
        p=new program1();
        try {
            p.readFile();
        } catch (Exception ex) {
            Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_program1ActionPerformed

    private void program2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_program2ActionPerformed
        // TODO add your handling code here:
        program2 p2=new program2();
       
        try {
            p2.readFile();
            //p2.execute();
        } catch (Exception ex) {
            Logger.getLogger(simulator.class.getName()).log(Level.SEVERE, null, ex);
        }
  
    }//GEN-LAST:event_program2ActionPerformed

    private void haltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haltActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "SYSTEM STOPPED!");
        cs.simulator.simulator.pc.setText("");
        cs.simulator.simulator.input.setText("");
        cs.simulator.simulator.log.setText("");
        cs.simulator.simulator.mar.setText("");
        cs.simulator.simulator.mbr.setText("");
        cs.simulator.simulator.cc.setText("");
        cs.simulator.simulator.ir.setText("");
        cs.simulator.simulator.r0.setText("");
        cs.simulator.simulator.r1.setText("");
        cs.simulator.simulator.r2.setText("");
        cs.simulator.simulator.r3.setText("");
        cs.simulator.simulator.ixr1.setText("");
        cs.simulator.simulator.ixr2.setText("");
        cs.simulator.simulator.ixr3.setText("");
        cs.simulator.simulator.mfr.setText("");
        r.setPC("06");
    }//GEN-LAST:event_haltActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(simulator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new simulator().setVisible(true);
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Log;
    public static javax.swing.JTextField cc;
    private javax.swing.JButton halt;
    public static javax.swing.JTextArea input;
    public javax.swing.JButton ipl;
    public static javax.swing.JTextField ir;
    public static javax.swing.JTextField ixr1;
    public static javax.swing.JTextField ixr2;
    public static javax.swing.JTextField ixr3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea log;
    public static javax.swing.JTextField mar;
    public static javax.swing.JTextField mbr;
    public static javax.swing.JTextField mfr;
    public static javax.swing.JTextField pc;
    public javax.swing.JButton program1;
    private javax.swing.JButton program2;
    public static javax.swing.JTextField r0;
    public static javax.swing.JTextField r1;
    public static javax.swing.JTextField r2;
    public static javax.swing.JTextField r3;
    public javax.swing.JButton run;
    public javax.swing.JButton singlestep;
    // End of variables declaration//GEN-END:variables
}
